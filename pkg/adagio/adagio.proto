syntax = "proto3";

package adagio;

option go_package = "github.com/georgemac/adagio/pkg/adagio";

message Run {
  string id = 1;
  string created_at = 2;
  repeated Node nodes = 3;
  repeated Edge edges = 4;
}

message Event {
  enum Type {
    STATE_TRANSITION = 0;
  }

  Type   type     = 1;
  string runID    = 2;
  string nodeName = 3;
}

message GraphSpec {
  repeated Node.Spec nodes = 1;
  repeated Edge edges = 2;
}

message MetadataValue {
  repeated string values = 1;
}

message Node {
  message Spec {
    string name = 1;
    string runtime = 2;
    map<string, MetadataValue> metadata = 3;
  }
  
  enum Status {
    WAITING = 0;
    READY = 1;
    RUNNING = 2;
    COMPLETED = 3;
  }

  enum Conclusion {
    SUCCESS = 0;
    FAIL = 1;
    ERROR = 2;
  }

  Spec spec = 1;
  Status status = 2;
  Conclusion conclusion = 3;
  string started_at = 4;
  string finished_at = 5;
  map<string, bytes> inputs = 6;
}

message Edge {
  string source = 1;
  string destination = 2;
}

message Result {
  map<string, MetadataValue> metadata = 1;
  bytes output = 2;
}
